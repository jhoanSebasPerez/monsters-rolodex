{"version":3,"sources":["components/Card.jsx","components/Cartlist.jsx","components/Searchbox.jsx","App.js","reportWebVitals.js","index.js"],"names":["CardContainer","styled","div","Card","monster","src","id","alt","name","email","CartlistContainer","Cartlist","monsters","map","SearchContainer","input","Searchbox","placeholder","handleChange","type","onChange","App","state","searchField","a","fetch","response","json","users","this","setState","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","className","e","target","value","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAgBMA,EAAgBC,IAAOC,IAAV,6XAkBJC,EA/BF,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACd,OACE,eAACJ,EAAD,WACE,qBACEK,IAAG,+BAA0BD,EAAQE,GAAlC,0BACHC,IAAI,YAEN,6BAAKH,EAAQI,OACb,4BAAIJ,EAAQK,YCEZC,EAAoBT,IAAOC,IAAV,+IAQRS,EAlBE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAClB,OACE,cAACF,EAAD,UACGE,EAASC,KAAI,SAACT,GAAD,OACZ,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQE,UCMrBQ,EAAkBb,IAAOc,MAAV,6KAUNC,EApBG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAChC,OACE,cAACJ,EAAD,CACEK,KAAK,SACLF,YAAaA,EACbG,SAAUF,KC+BDG,E,kDAjCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACXV,SAAU,GACVW,YAAa,IAJH,E,4FAQd,8BAAAC,EAAA,sEACyBC,MAAM,8CAD/B,cACQC,EADR,gBAEsBA,EAASC,OAF/B,OAEQC,EAFR,OAGEC,KAAKC,SAAS,CAAElB,SAAUgB,IAH5B,gD,0EAMA,WAAU,IAAD,OACP,EAAkCC,KAAKP,MAA/BV,EAAR,EAAQA,SAAUW,EAAlB,EAAkBA,YACZQ,EAAmBnB,EAASoB,QAAO,SAAC5B,GAAD,OACvCA,EAAQI,KAAKyB,cAAcC,SAASX,EAAYY,wBAGlD,OACE,sBAAKC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEnB,YAAY,iBACZC,aAAc,SAACmB,GAAD,OAAO,EAAKP,SAAS,CAAEP,YAAac,EAAEC,OAAOC,WAE7D,cAAC,EAAD,CAAU3B,SAAUmB,W,GA5BVS,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5a6a6453.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Card = ({ monster }) => {\n  return (\n    <CardContainer>\n      <img\n        src={`https://robohash.org/${monster.id}?set=set2&size=180x180`}\n        alt=\"monster\"\n      />\n      <h3>{monster.name}</h3>\n      <p>{monster.email}</p>\n    </CardContainer>\n  );\n};\n\nconst CardContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #95dada;\n  border: 1px solid grey;\n  border-radius: 5px;\n  padding: 25px;\n  cursor: pointer;\n  -moz-osx-font-smoothing: grayscale;\n  backface-visibility: hidden;\n  transform: translateZ(0);\n  transition: transform 0.25s ease-out;\n\n  &:hover {\n    transform: scale(1.05);\n  }\n`;\n\nexport default Card;\n","import styled from \"styled-components\";\nimport Card from \"./Card\";\n\nconst Cartlist = ({ monsters }) => {\n  return (\n    <CartlistContainer>\n      {monsters.map((monster) => (\n        <Card key={monster.id} monster={monster} />\n      ))}\n    </CartlistContainer>\n  );\n};\n\nconst CartlistContainer = styled.div`\n  width: 85vw;\n  margin: 0 auto;\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr 1fr;\n  grid-gap: 20px;\n`;\n\nexport default Cartlist;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Searchbox = ({ placeholder, handleChange }) => {\n  return (\n    <SearchContainer\n      type=\"search\"\n      placeholder={placeholder}\n      onChange={handleChange}\n    />\n  );\n};\n\nconst SearchContainer = styled.input`\n  -webkit-appearance: none;\n  border: none;\n  outline: none;\n  padding: 10px;\n  width: 150px;\n  line-height: 30px;\n  margin-bottom: 30px;\n`;\n\nexport default Searchbox;\n","import { Component } from \"react\";\nimport \"./App.css\";\nimport Cartlist from \"./components/Cartlist\";\nimport Searchbox from \"./components/Searchbox\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      monsters: [],\n      searchField: \"\",\n    };\n  }\n\n  async componentDidMount() {\n    const response = await fetch(\"https://jsonplaceholder.typicode.com/users\");\n    const users = await response.json();\n    this.setState({ monsters: users });\n  }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    const filteredMonsters = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLocaleLowerCase())\n    );\n\n    return (\n      <div className=\"App\">\n        <h1>The Monsters App</h1>\n        <Searchbox\n          placeholder=\"Search monster\"\n          handleChange={(e) => this.setState({ searchField: e.target.value })}\n        />\n        <Cartlist monsters={filteredMonsters} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}